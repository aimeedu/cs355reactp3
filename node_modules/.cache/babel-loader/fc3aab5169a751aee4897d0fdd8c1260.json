{"ast":null,"code":"var _jsxFileName = \"/Users/aimeedu/WebstormProjects/cs355reactp3/src/components/SearchEngine.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormControl } from \"react-bootstrap\";\nimport './Components.css';\nimport Download from \"./Download\";\nimport axios from \"axios\";\n\nclass SearchEngine extends Component {\n  constructor(props) {\n    super(props);\n\n    this.search = async e => {\n      e.preventDefault();\n      const term = e.target.elements.userInput.value;\n      const username = e.target.elements.userInput.value;\n      this.setState({\n        term\n      });\n      let setParam = {\n        term: this.state.term\n      };\n      /** send the term to back end */\n\n      axios.post('http://localhost:5000/custom', {\n        term\n      }).then(res => {\n        console.log(res.data); // console.log('Pass term to back end!');\n      });\n      axios.get('http://localhost:5000/admin').then(res => {\n        console.log(res.data); // console.log('Pass term to back end!');\n      }); // axios.get('http://localhost:5000/admin')\n      //     // pass term as /admin/term\n      //     .then((res)=>{\n      //         console.log(res.data);\n      //         // console.log('Pass term to back end!');\n      //     })\n    };\n\n    this.checkCase = () => {\n      this.setState({\n        caseInsensitive: !this.state.caseInsensitive\n      });\n      console.log(this.state.caseInsensitive);\n    };\n\n    this.checkMatch = () => {\n      this.setState({\n        partialMatch: !this.state.partialMatch\n      });\n      console.log(this.state.partialMatch);\n    };\n\n    this.state = {\n      caseInsensitive: false,\n      partialMatch: false,\n      term: null,\n      data: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"My Custom Search Engine\"), React.createElement(\"div\", {\n      className: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"case\",\n      onChange: this.checkCase,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), \" Case Insensitive \"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"match\",\n      onChange: this.checkMatch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), \" Allow Partial Match \")), React.createElement(Form, {\n      className: \"search\",\n      onSubmit: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: \"mr-sm-1 searchBar\",\n      type: \"text\",\n      placeholder: \"Type a word to Search.\",\n      name: \"userInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Button, {\n      id: \"searchBtn\",\n      variant: \"btn btn-light purple-btn\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Search\")), React.createElement(Download, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" Search Result: \", this.state.term), \"/** when click search button pass the term to backend, insert into search table/ done query the page table. find all the entries with certain words. display the result download the result */\");\n  }\n\n}\n\nexport default SearchEngine;","map":{"version":3,"sources":["/Users/aimeedu/WebstormProjects/cs355reactp3/src/components/SearchEngine.js"],"names":["React","Component","Button","Form","FormControl","Download","axios","SearchEngine","constructor","props","search","e","preventDefault","term","target","elements","userInput","value","username","setState","setParam","state","post","then","res","console","log","data","get","checkCase","caseInsensitive","checkMatch","partialMatch","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Form, FormControl} from \"react-bootstrap\";\nimport './Components.css';\nimport Download from \"./Download\";\nimport axios from \"axios\";\n\nclass SearchEngine extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            caseInsensitive: false,\n            partialMatch: false,\n            term: null,\n            data:[]\n        }\n    }\n\n    search = async (e) => {\n        e.preventDefault();\n        const term = e.target.elements.userInput.value;\n        const username = e.target.elements.userInput.value;\n        this.setState({\n            term\n        })\n\n        let setParam = {term : this.state.term}\n        /** send the term to back end */\n        axios.post('http://localhost:5000/custom', {term})\n            .then((res)=>{\n                console.log(res.data);\n                // console.log('Pass term to back end!');\n            })\n        axios.get('http://localhost:5000/admin')\n            .then((res)=>{\n                console.log(res.data);\n                // console.log('Pass term to back end!');\n            })\n        // axios.get('http://localhost:5000/admin')\n        //     // pass term as /admin/term\n        //     .then((res)=>{\n        //         console.log(res.data);\n        //         // console.log('Pass term to back end!');\n        //     })\n    }\n\n    checkCase = () => {\n        this.setState({\n            caseInsensitive: !this.state.caseInsensitive,\n        })\n        console.log(this.state.caseInsensitive);\n    }\n\n    checkMatch = () => {\n        this.setState({\n            partialMatch: !this.state.partialMatch,\n        })\n        console.log(this.state.partialMatch);\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>My Custom Search Engine</h2>\n\n                <div className=\"checkbox\">\n                    <label><input type=\"checkbox\" name=\"case\" onChange={this.checkCase}/> Case Insensitive </label>\n                    <label><input type=\"checkbox\" name=\"match\" onChange={this.checkMatch}/> Allow Partial Match </label>\n                </div>\n\n\n                <Form className=\"search\" onSubmit={this.search}>\n                    <FormControl className=\"mr-sm-1 searchBar\" type=\"text\" placeholder=\"Type a word to Search.\" name=\"userInput\"/>\n                    <Button id=\"searchBtn\" variant=\"btn btn-light purple-btn\" type=\"submit\">Search</Button>\n                </Form>\n\n                <Download data={this.state.data} />\n\n                <h3> Search Result: {this.state.term}</h3>\n\n                /** when click search button\n                    pass the term to backend, insert into search table/ done\n                    query the page table. find all the entries with certain words.\n                    display the result\n                    download the result\n                */\n\n            </div>\n        )\n    }\n}\n\nexport default SearchEngine;"]},"metadata":{},"sourceType":"module"}