{"ast":null,"code":"var _jsxFileName = \"/Users/aimeedu/WebstormProjects/cs355reactp3/src/components/SearchEngine.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormControl } from \"react-bootstrap\";\nimport './Components.css';\nimport Download from \"./Download\";\nimport axios from \"axios\";\n\nclass SearchEngine extends Component {\n  constructor(props) {\n    super(props);\n\n    this.search = async e => {\n      e.preventDefault();\n      const term = e.target.elements.userInput.value;\n      const username = e.target.elements.userInput.value;\n      this.setState({\n        term\n      }); // console.log(term);\n\n      /** send the term to back end */\n\n      axios.post('http://localhost:5000/custom', {\n        term\n      }).then(res => {\n        console.log(res.data); // console.log('Pass term to back end!');\n      });\n      const api_call = await fetch(\"http://localhost:5000/admin/\".concat(term));\n      const data = await api_call.json();\n      this.setState({\n        data: data\n      });\n      console.log(this.state.data);\n    };\n\n    this.checkBox = event => {\n      const index = event.target.dataset.index;\n      this.setState(state => {\n        const data = [...state.data];\n        const object = state.data[index];\n        object.isChecked = !object.isChecked;\n        data.splice(index, 1, object);\n        return {\n          data\n        };\n      });\n      console.log(this.state.data); // this.setState({\n      //     data\n      // })\n    };\n\n    this.checkCase = () => {\n      this.setState({\n        caseInsensitive: !this.state.caseInsensitive\n      });\n      console.log(this.state.caseInsensitive);\n    };\n\n    this.checkMatch = () => {\n      this.setState({\n        partialMatch: !this.state.partialMatch\n      });\n      console.log(this.state.partialMatch);\n    };\n\n    this.state = {\n      caseInsensitive: false,\n      partialMatch: false,\n      term: null,\n      data: []\n    };\n  }\n  /** Here, we are using $text and $search MongoDB operators for find all documents in collection collectionName which contains at least one word from the specified find query.\n   partial search */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"My Custom Search Engine\"), React.createElement(\"div\", {\n      className: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"case\",\n      onChange: this.checkCase,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), \" Case Insensitive \"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"match\",\n      onChange: this.checkMatch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), \" Allow Partial Match \")), React.createElement(Form, {\n      className: \"search\",\n      onSubmit: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: \"mr-sm-1 searchBar\",\n      type: \"text\",\n      placeholder: \"Type a word to Search.\",\n      name: \"userInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Button, {\n      id: \"searchBtn\",\n      variant: \"btn btn-light purple-btn\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Search\")), React.createElement(Download, {\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \" Search Result: \", this.state.term), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.data.map((data, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        \"data-index\": i,\n        id: \"ch\",\n        type: \"checkbox\",\n        onChange: this.checkBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, data.wordname), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Title: \", data.title), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Description: \", data.description), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: data.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, data.url)), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"id: \", data._id), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Created At: \", data.createdAt), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Time to Search: \"))));\n    })));\n  }\n\n}\n\nexport default SearchEngine;","map":{"version":3,"sources":["/Users/aimeedu/WebstormProjects/cs355reactp3/src/components/SearchEngine.js"],"names":["React","Component","Button","Form","FormControl","Download","axios","SearchEngine","constructor","props","search","e","preventDefault","term","target","elements","userInput","value","username","setState","post","then","res","console","log","data","api_call","fetch","json","state","checkBox","event","index","dataset","object","isChecked","splice","checkCase","caseInsensitive","checkMatch","partialMatch","render","map","i","wordname","title","description","url","_id","createdAt"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Form, FormControl} from \"react-bootstrap\";\nimport './Components.css';\nimport Download from \"./Download\";\nimport axios from \"axios\";\n\nclass SearchEngine extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            caseInsensitive: false,\n            partialMatch: false,\n            term: null,\n            data:[]\n        }\n    }\n    /** Here, we are using $text and $search MongoDB operators for find all documents in collection collectionName which contains at least one word from the specified find query.\n     partial search */\n    search = async (e) => {\n        e.preventDefault();\n        const term = e.target.elements.userInput.value;\n        const username = e.target.elements.userInput.value;\n        this.setState({\n            term\n        })\n        // console.log(term);\n\n        /** send the term to back end */\n        axios.post('http://localhost:5000/custom', {term})\n            .then((res)=>{\n                console.log(res.data);\n                // console.log('Pass term to back end!');\n            });\n\n        const api_call = await fetch(`http://localhost:5000/admin/${term}`);\n        const data = await api_call.json();\n\n        this.setState({\n            data: data\n        })\n        console.log(this.state.data);\n\n    }\n    // a controlled form handles all form changes via state, which is a very React way of doing things.\n    checkBox = (event) => {\n\n        const index = event.target.dataset.index;\n\n        this.setState(state => {\n            const data = [...state.data];\n            const object = state.data[index];\n            object.isChecked = !object.isChecked;\n            data.splice(index, 1, object);\n            return {\n                data\n            }\n        })\n\n        console.log(this.state.data);\n        // this.setState({\n        //     data\n        // })\n    }\n\n    checkCase = () => {\n        this.setState({\n            caseInsensitive: !this.state.caseInsensitive,\n        })\n        console.log(this.state.caseInsensitive);\n    }\n\n    checkMatch = () => {\n        this.setState({\n            partialMatch: !this.state.partialMatch,\n        })\n        console.log(this.state.partialMatch);\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>My Custom Search Engine</h2>\n\n                <div className=\"checkbox\">\n                    <label><input type=\"checkbox\" name=\"case\" onChange={this.checkCase}/> Case Insensitive </label>\n                    <label><input type=\"checkbox\" name=\"match\" onChange={this.checkMatch}/> Allow Partial Match </label>\n                </div>\n\n\n                <Form className=\"search\" onSubmit={this.search}>\n                    <FormControl className=\"mr-sm-1 searchBar\" type=\"text\" placeholder=\"Type a word to Search.\" name=\"userInput\"/>\n                    <Button id=\"searchBtn\" variant=\"btn btn-light purple-btn\" type=\"submit\">Search</Button>\n                </Form>\n\n                <Download data={this.state.data} />\n\n                <h3> Search Result: {this.state.term}</h3>\n\n                {/*\\ when click search button*/}\n                {/*    pass the term to backend, insert into search table/ done*/}\n                {/*    query the page table. find all the entries with certain words.*/}\n                {/*    display the result*/}\n                {/*    download the result*/}\n\n                <div className=\"container\">\n                    {this.state.data.map((data, i) => {\n                        return (\n                            <div key={i} className=\"row\">\n                                <div className=\"col-sm-2\"></div>\n                                <div className=\"col-sm-8\">\n                                    <div className=\"box\">\n\n                                        <input data-index={i} id=\"ch\"  type=\"checkbox\"  onChange={this.checkBox}/>\n                                        {/*<button className=\"btn btn-outline-primary\" data-index={i} onClick={this.delete}> Delete </button>*/}\n                                        <h4>{data.wordname}</h4>\n\n                                        <h4>Title: {data.title}</h4>\n                                        <h4>Description: {data.description}</h4>\n                                        <h5><a href={data.url}>{data.url}</a></h5>\n                                        <h5>id: {data._id}</h5>\n                                        <h5>Created At: {data.createdAt}</h5>\n                                        <h5>Time to Search: </h5>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default SearchEngine;"]},"metadata":{},"sourceType":"module"}