{"ast":null,"code":"var _jsxFileName = \"/Users/aimeedu/WebstormProjects/cs355reactp3/src/components/Admin.js\";\nimport React, { Component } from 'react';\nimport './Admin.css';\nimport { Button, Form, FormControl } from \"react-bootstrap\";\nimport axios from 'axios';\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchSearchHistories = async () => {\n      /** when we use postgresql this code works\n      const res = await fetch('/admin');\n      const results = await res.json();\n      this.setState({\n          results\n      }) */\n      // below is for mongodb get search result.\n      axios.get('http://localhost:5000/custom').then(res => {\n        this.setState({\n          SearchData: res.data\n        });\n        console.log(res.data);\n      });\n    };\n\n    this.fetchIndexingHistories = async () => {\n      // below is for mongodb get search result.\n      axios.get('http://localhost:5000/admin').then(res => {\n        this.setState({\n          IndexingData: res.data\n        });\n        console.log(res.data);\n      });\n    };\n\n    this.indexing = e => {\n      e.preventDefault(); // get the user input url\n\n      const inputURL = e.target.elements.userInput.value;\n      console.log(inputURL);\n      /** pass this url to the post function.*/\n\n      axios.post('http://localhost:5000/admin', {\n        inputURL\n      }).then(res => {\n        console.log(res.data);\n        console.log('Indexing Successfully! Data inserted in DB!');\n      });\n      this.setState({\n        isIndexed: true,\n        count: this.state.count + 1\n      });\n    };\n\n    this.state = {\n      SearchData: [],\n      IndexingData: [],\n      isIndexed: false,\n      count: 0\n    };\n  } // make AJAX calls, query the data from the search table. http://localhost:3000 or 5000/admin, both working\n  // as soon as you click on fetch data button, the table will show.\n\n\n  render() {\n    const Searchrows = this.state.SearchData.map((SearchData, i) => {\n      return React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, SearchData.searchid), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, SearchData.term), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, SearchData.count), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, SearchData.createdAt), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, SearchData.timetosearch));\n    });\n    const Indexingrows = this.state.IndexingData.map((IndexingData, i) => {\n      return React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, IndexingData._id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, IndexingData.url), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, IndexingData.title), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, IndexingData.description), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, IndexingData.createdAt), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, IndexingData.timetosearch));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Indexing Launcher\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.isIndexed ? \"Data inserted into DB! Indexing Count: \".concat(this.state.count) : null), React.createElement(Form, {\n      className: \"search\",\n      onSubmit: this.indexing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: \"mr-sm-1 searchBar\",\n      type: \"url\",\n      placeholder: \"Type a URL to be indexed.\",\n      name: \"userInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Button, {\n      id: \"searchBtn\",\n      variant: \"btn btn-light purple-btn\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"User Search Histories \", React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-light\",\n      onClick: this.fetchSearchHistories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Fetch Data\")), React.createElement(\"table\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Search ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Terms\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Number of search results\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Created At\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Searching Time\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, Searchrows)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Indexing Histories \", React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-light\",\n      onClick: this.fetchIndexingHistories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Fetch Data\")), React.createElement(\"table\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Indexing ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"URL\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Created At\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Indexing Time\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, Indexingrows)));\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["/Users/aimeedu/WebstormProjects/cs355reactp3/src/components/Admin.js"],"names":["React","Component","Button","Form","FormControl","axios","Admin","constructor","props","fetchSearchHistories","get","then","res","setState","SearchData","data","console","log","fetchIndexingHistories","IndexingData","indexing","e","preventDefault","inputURL","target","elements","userInput","value","post","isIndexed","count","state","render","Searchrows","map","i","searchid","term","createdAt","timetosearch","Indexingrows","_id","url","title","description"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './Admin.css';\nimport {Button, Form, FormControl} from \"react-bootstrap\";\nimport axios from 'axios';\n\n\nclass Admin extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            SearchData:[],\n            IndexingData:[],\n            isIndexed: false,\n            count:0\n        }\n    }\n\n    // make AJAX calls, query the data from the search table. http://localhost:3000 or 5000/admin, both working\n    // as soon as you click on fetch data button, the table will show.\n    fetchSearchHistories = async () => {\n        /** when we use postgresql this code works\n        const res = await fetch('/admin');\n        const results = await res.json();\n        this.setState({\n            results\n        }) */\n        // below is for mongodb get search result.\n        axios.get('http://localhost:5000/custom')\n            .then(res => {\n                this.setState({\n                    SearchData: res.data\n                })\n                console.log(res.data);\n            })\n    }\n\n    fetchIndexingHistories = async () => {\n        // below is for mongodb get search result.\n        axios.get('http://localhost:5000/admin')\n            .then(res => {\n                this.setState({\n                    IndexingData: res.data\n                })\n                console.log(res.data);\n            })\n    }\n\n    indexing = (e) => {\n        e.preventDefault();\n        // get the user input url\n        const inputURL = e.target.elements.userInput.value;\n        console.log(inputURL);\n\n        /** pass this url to the post function.*/\n        axios.post('http://localhost:5000/admin', {inputURL})\n            .then((res)=>{\n                console.log(res.data);\n                console.log('Indexing Successfully! Data inserted in DB!');\n            })\n        this.setState({\n            isIndexed: true,\n            count: this.state.count+1\n        })\n    }\n\n    render() {\n\n        const Searchrows = this.state.SearchData.map((SearchData, i) => {\n            return(\n                <tr key={i}>\n                    <td>{SearchData.searchid}</td>\n                    <td>{SearchData.term}</td>\n                    <td>{SearchData.count}</td>\n                    <td>{SearchData.createdAt}</td>\n                    <td>{SearchData.timetosearch}</td>\n                </tr>\n            )\n        })\n\n        const Indexingrows = this.state.IndexingData.map((IndexingData, i) => {\n            return(\n                <tr key={i}>\n                    <td>{IndexingData._id}</td>\n                    <td>{IndexingData.url}</td>\n                    <td>{IndexingData.title}</td>\n                    <td>{IndexingData.description}</td>\n                    <td>{IndexingData.createdAt}</td>\n                    <td>{IndexingData.timetosearch}</td>\n                </tr>\n            )\n        })\n        return (\n            <div>\n                <h2>Indexing Launcher</h2>\n                <h3>{this.state.isIndexed?`Data inserted into DB! Indexing Count: ${this.state.count}`:null}</h3>\n                <Form className=\"search\" onSubmit={this.indexing}>\n                    <FormControl className=\"mr-sm-1 searchBar\" type=\"url\" placeholder=\"Type a URL to be indexed.\" name=\"userInput\"/>\n                    <Button id=\"searchBtn\" variant=\"btn btn-light purple-btn\" type=\"submit\">Search</Button>\n                </Form>\n\n                <br/><br/>\n\n                <h3>User Search Histories <button type=\"button\" className=\"btn btn-outline-light\" onClick={this.fetchSearchHistories}>Fetch Data</button></h3>\n                <table className=\"\">\n                    <thead>\n                        <tr>\n                            <th>Search ID</th>\n                            <th>Terms</th>\n                            <th>Number of search results</th>\n                            <th>Created At</th>\n                            <th>Searching Time</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {Searchrows}\n                    </tbody>\n                </table>\n                <br/>\n\n                <h3>Indexing Histories <button type=\"button\" className=\"btn btn-outline-light\" onClick={this.fetchIndexingHistories}>Fetch Data</button></h3>\n                <table className=\"\">\n                    <thead>\n                    <tr>\n                        <th>Indexing ID</th>\n                        <th>URL</th>\n                        <th>Title</th>\n                        <th>Description</th>\n                        <th>Created At</th>\n                        <th>Indexing Time</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {Indexingrows}\n                    </tbody>\n                </table>\n\n            </div>\n        );\n    }\n}\n\nexport default Admin;"]},"metadata":{},"sourceType":"module"}